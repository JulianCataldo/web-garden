---
import type { Props as baseProps } from './Props';

export interface Props extends baseProps {}
const props = { ...Astro.props } as Props;
/* ———————————————————————————————————————————— Typeguards + Fallbacks —————— */
const internalProps: string[] = [];

if (typeof props.x !== 'number') props.x = 43.389636;
internalProps.push('x');
if (typeof props.y !== 'number') props.y = 5.3964332;
internalProps.push('y');
if (typeof props.z !== 'number') props.z = 10;
internalProps.push('z');
if (typeof props.height !== 'string') props.height = '12rem';
internalProps.push('height');
if (typeof props.width !== 'string') props.width = '100%';
internalProps.push('width');
if (typeof props.attribution !== 'boolean') props.attribution = true;
internalProps.push('attribution');
/* ············································ Extra HTML attributes ······· */
const extraAttrs: { [key: string]: string } = {};
Object.entries(props).forEach(([key, val]) => {
  if (internalProps.includes(key) === false) {
    extraAttrs[key] = `${val as string}`;
  }
});
/* —————————————————————————————————————————————————————————————————————————— */
---

<div
  style={`z-index: 0; width: ${props.width}; height: ${props.height}; ` +
  `--display: ${
    props.attribution ? 'initial' : 'none'
  }` /* NOTE: workaround as `define:vars` isn't working */}
  id="map"
  data-x={props.x}
  data-y={props.y}
  data-z={props.z}
  {...extraAttrs}
>
</div>

<script>
  import Leaflet from 'leaflet';
  // ONE MAP PER PAGE (for now)
  const mapElem = document.getElementById('map');

  if (mapElem) {
    const map = Leaflet.map('map', {
      center: [
        parseFloat(mapElem.getAttribute('data-x')),
        parseFloat(mapElem.getAttribute('data-y')),
      ],
      zoom: parseFloat(mapElem.getAttribute('data-z')) || 14,
      scrollWheelZoom: false,
    });

    // FUTURE OPTION : Choose map tiles provider
    // const mapAccessToken = `import.meta.env.PUBLIC_MAP_TILER_ACCESS_TOKEN`;
    // const mapId = 'topographique';
    // const mapImgFormat = 'png';
    // const url = `https://api.maptiler.com/maps/${mapId}/256/{z}/{x}/{y}{r}.${mapImgFormat}?key=${mapAccessToken}`;
    // const url = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';
    const url = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

    const layer = new Leaflet.TileLayer(url);
    map.addLayer(layer);
  }
</script>

<!-- FIXME: `define:vars` not working in this component only -->
<style lang="scss" is:global>
  @import 'leaflet';
  .leaflet-control-attribution {
    display: var(--display, 'initial');
  }
</style>
