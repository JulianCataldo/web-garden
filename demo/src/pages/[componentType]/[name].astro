---
import Layout from 'src/layouts/Default/Default.astro';
import LinksTree from 'src/components/LinksTree/LinksTree.astro';
import SinglePackage from 'src/modules/Single/Package/SinglePackage.astro';
import { structureAllPackages } from 'src/packages-loader';

const { params } = Astro;

const packages = await structureAllPackages({
  pJsons: await Astro.glob(
    '../../../../{app,components}/{*/,*/*/}package.json',
  ),
  readmes: await Astro.glob(
    '/content/packages/{app,components}/{*/,*/*/}README.md',
  ),
  changelogs: await Astro.glob(
    '/content/packages/{app,components}/{*/,*/*/}CHANGELOG.md',
  ),
  anchorMode: false,
});

const thePackage = packages
  .filter(
    (pkg) => pkg.pJson.name.replace('@julian_cataldo/', '') === params.name,
  )
  .pop();

export async function getStaticPaths() {
  const packagesForRoutes = await structureAllPackages({
    pJsons: await Astro.glob(
      '../../../../{app,components}/{*/,*/*/}package.json',
    ),
    readmes: await Astro.glob(
      '/content/packages/{app,components}/{*/,*/*/}README.md',
    ),
    changelogs: null,
    anchorMode: null,
  });
  return packagesForRoutes.map((pkg) => ({
    params: {
      componentType: 'component',
      name: pkg.pJson.name.replace('@julian_cataldo/', ''),
    },
  }));
}

const titles = {
  main: thePackage.readme.mainTitle.text,
  sub: thePackage.pJson.description,
};

const tableOfContentHeaders = packages.map((e) => e.readme.mainTitle);
const actions = [
  { title: 'Quick start', href: '#doc', icon: 'system-uicons:flag' },
];
if (thePackage.hasDemo) {
  actions.push({
    title: 'Live demo',
    href: '#live-demo',
    icon: 'system-uicons:hand',
  });
}
if (thePackage.video) {
  actions.push({
    title: 'Test / Demo video',
    href: '#test-video',
    icon: 'system-uicons:play-button',
  });
}
if (thePackage.api) {
  actions.push({
    title: 'TypeScript API',
    href: '#ts-api',
    icon: 'mdi:language-typescript',
  });
}
if (thePackage.changelog) {
  actions.push({
    title: 'Change log',
    href: '#changelog',
    icon: 'system-uicons:flip-view',
  });
}
if (thePackage.pJson.repository.directory && thePackage.pJson.repository.url) {
  const url = `${thePackage.pJson.repository.url}/tree/master/${thePackage.pJson.repository.directory}`;
  actions.push({ title: 'Source', href: url, icon: 'mdi:github' });
}
if (thePackage.pJson.name) {
  const url = `https://www.npmjs.com/package/${thePackage.pJson.name}`;
  actions.push({ title: 'Package', href: url, icon: 'mdi:npm' });
}
// if (thePackage.typescriptProps) {
//   actions.push({ title: 'TypeScript API', href: '#ts-api' });
// }
---

<Layout titles={titles} actions={actions}>
  <article class='main-content'>
    <div class='navigation'>
      <h1>Components</h1>
      <LinksTree links={tableOfContentHeaders} anchorMode={false} />
    </div>

    <div class='content article'>
      <div class='wrapper'>
        <SinglePackage content={thePackage} />
      </div>
    </div>
  </article>
</Layout>
