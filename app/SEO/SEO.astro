---
import type { Props as BaseProps } from './Props';

export interface Props extends BaseProps {}
const props = { ...Astro.props } as Props;

/* ———————————————————————————————————————————— Typeguards + Fallbacks —————— */
if (typeof props.image !== 'string') {
  props.image = '/poster.jpg';
  console.warn('> Missing `image` property for <SEO>');
}
if (typeof props.title !== 'string') {
  props.title = 'Untitled';
  console.warn('> Missing `title` property for <SEO>');
}
if (typeof props.description !== 'string') {
  props.description = '- Website -';
  console.warn('> Missing `description` property for <SEO>');
}
if (typeof props.siteName !== 'string') {
  props.siteName = '• Website •';
  console.warn('> Missing `siteName` property for <SEO>');
}
/* —————————————————————————————————————————————————————————————————————————— */
---

<!-- SEO -->
<meta property='og:type' content='website' />

<meta name='apple-mobile-web-app-title' content={props.siteName} />
<meta property='og:site_name' content={props.siteName} />

<title>{props.title}</title>
<meta property='og:title' content={props.title} />
<meta name='twitter:title' content={props.title} />

<meta property='og:image' content={props.image} />
<meta property='og:image:alt' content={props.description} />
<meta name='twitter:image:src' content={props.image} />

<meta name='twitter:card' content={'summary_large_image'} />

<meta name='description' property='og:description' content={props.description}
/>
<meta name='twitter:description' content={props.description} />
<!-- /SEO -->
